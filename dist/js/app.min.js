var app=angular.module("weatherApp",[]);app.controller("widgetCtrl",function($scope,$http,$timeout){var apiKey=config.apiKey;function weatherIcon(condition){switch(condition){case"sunny":case"clear":case"mostlysunny":return"sunny";case"cloudy":case"mostlycloudy":return"cloudy";case"partlysunny":case"partlycloudy":return"partly-cloudy";case"tstorms":case"chancetstorms":return"tstorms";case"rain":case"chancerain":return"rain";case"sleet":case"chancesleet":case"flurries":case"chanceflurries":case"snow":case"chancesnow":return"snow";case"fog":case"hazy":return"fog"}return"sunny"}$scope.widgetStatus="weather",$scope.refreshData=function(){(new Date).getHours();$scope.widgetStatus="weather",$http.get("http://api.wunderground.com/api/"+apiKey+"/forecast/hourly/alerts/conditions/q/OH/Columbus.json").then(function(response){200===response.status&&function(data){var currentConditions=data.current_observation,forecastArr=data.forecast.simpleforecast.forecastday,forecastTxt=data.forecast.txt_forecast.forecastday[0];$scope.forecastData=[];for(var i=0;i<3;i++){var forecastDate={dayOfWeek:forecastArr[i].date.weekday,monthShortname:forecastArr[i].date.monthname_short,date:forecastArr[i].date.day,icon:weatherIcon(forecastArr[i].icon),condition:forecastArr[i].conditions,hiTemp:Number(forecastArr[i].high.fahrenheit),loTemp:Number(forecastArr[i].low.fahrenheit),pop:forecastArr[i].pop,popIcon:"rain"};0===i&&(forecastDate.icon=weatherIcon(currentConditions.icon),forecastDate.condition=currentConditions.weather,forecastDate.description=forecastTxt.fcttext,forecastDate.currentTemp=Number(currentConditions.temp_f).toFixed(0),forecastDate.feelsLike=Number(currentConditions.feelslike_f).toFixed(0),forecastDate.lastUpdated=currentConditions.observation_time),(void 0!==forecastDate.currentTemp&&forecastDate.currentTemp<32||(forecastDate.hiTemp+forecastDate.loTemp)/2<32)&&(forecastDate.popIcon="snow"),$scope.forecastData.push(forecastDate)}$scope.weatherData1=$scope.forecastData[0],$scope.weatherData2=$scope.forecastData[1],$scope.weatherData3=$scope.forecastData[2]}(response.data)}),$timeout($scope.refreshData,3e5)},$scope.refreshData()});